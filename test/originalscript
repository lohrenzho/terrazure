terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "3.42.0"
    }
  }
}

provider "azurerm" {
  subscription_id = "c4f83d6a-ca80-468b-b372-565f768be207"
  # client_id       = "cf624f16-a01d-46c4-93b9-8c2725fe6490"
  # client_secret   = "Irf8Q~o526v2xct2geZgxDZv1PiH_5SPCLJNRbPR"
  # tenant_id       = "05d14c64-5054-41e5-b2a4-f220a1415790"
  features {}
}

# provider "azurerm" {
# alias = "transversal"
# features {}
# subscription_id = "a9c1f0e3-d8a8-45da-a1c2-0581a7d4410e"
# }

# data "azurerm_resource_group" "Core_Firewall" {
#   name = "Core-FirewallRG"
#   provider = azurerm.transversal
# }

## CREATE RESOURCE GROUP
resource "azurerm_resource_group" "test_grp" {
  name     = "zho_testRG"
  location = var.location
}

## CREATE VIRTUAL NETWORK
resource "azurerm_virtual_network" "test_vnet" {
  name                = "Core-Dev-Vnet" #var.vnet_name
  location            = var.location
  resource_group_name = azurerm_resource_group.test_grp.name
  address_space       = var.vnet_prefix
 
  tags = {
    environment = var.tags
  }

}

## CREATE SUBNET 1
resource "azurerm_subnet" "subnet1_name" {
  name                 = "Test_Core_Dev_SQL_Subnet"
  resource_group_name  = azurerm_resource_group.test_grp.name
  virtual_network_name = azurerm_virtual_network.test_vnet.name #var.vnet_name
  address_prefixes     = ["10.7.0.0/24"] #var.subnet1_prefix

}

## CREATE SUBNET 2
resource "azurerm_subnet" "subnet2_name" {
  name                 = "Test_Core_App_Subnet"
  resource_group_name  = azurerm_resource_group.test_grp.name #var.resource_group_name
  virtual_network_name = azurerm_virtual_network.test_vnet.name #var.vnet_name
  address_prefixes     = ["10.7.1.0/24"] #var.subnet2_prefix

}

# ## CREATE  VIRTUAL NETWORK PEEERING
# resource "azurerm_virtual_network_peering" "peering-1" {
#   name                      = "DevNet-CoreFirewall"
#   resource_group_name       = azurerm_resource_group.test_grp.name #var.resource_group_name
#   virtual_network_name      = azurerm_virtual_network.test_vnet.name
#   remote_virtual_network_id = "/subscriptions/a9c1f0e3-d8a8-45da-a1c2-0581a7d4410e/resourceGroups/Core-FirewallRG/providers/Microsoft.Network/virtualNetworks/Core-FirewallVnet" #"d0bf2fe8-f4ba-436f-bd44-2fb5acae2507"
# }

#  resource "azurerm_virtual_network_peering" "peering-2" {
#    name                      = "CoreFirewall-DevNet"
#    resource_group_name       = data.azurerm_resource_group.Core_Firewall.name
#    virtual_network_name      = "Core-FirewallVnet"
#    remote_virtual_network_id = azurerm_virtual_network.test_vnet.id
# }

## CREATE NETWORK INTERFACE FOR SUBNET 1
resource "azurerm_network_interface" "nic1_name" {
  name                = var.nic1-name
  location            = var.location
  resource_group_name = azurerm_resource_group.test_grp.name #var.resource_group_name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.subnet1_name.id
    private_ip_address_allocation = "Dynamic"
  }
  depends_on = [
    azurerm_virtual_network.test_vnet
  ]
}

## CREATE VIRTUAL MACHINE 1(SQL SERVER)
resource "azurerm_windows_virtual_machine" "vm1" {
  name                = var.vm_sql_server
  resource_group_name = azurerm_resource_group.test_grp.name #var.resource_group_name
  location            = var.location
  size                = var.vm_size
  admin_username      = "aomojola"
  admin_password      = "Phil0$0phyakin2023"
  network_interface_ids = [
    azurerm_network_interface.nic1_name.id,
  ]

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "MicrosoftWindowsServer"
    offer     = "WindowsServer"
    sku       = "2019-Datacenter"
    version   = "latest"
  }

  depends_on = [
    azurerm_network_interface.nic1_name
  ]
  
}

## CREATE NETWORK INTERFACE FOR SUBNET 2
resource "azurerm_network_interface" "nic2_name" {
  name                = "zho-nic2"
  location            = var.location
  resource_group_name = azurerm_resource_group.test_grp.name #var.resource_group_name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.subnet2_name.id
    private_ip_address_allocation = "Dynamic"
  }

  depends_on = [
    azurerm_virtual_network.test_vnet
  ]
}

## CREATE VIRTUAL MACHINE 2 (APP SERVER)
resource "azurerm_windows_virtual_machine" "vm2" {
  name                = var.vm_app_server
  resource_group_name = azurerm_resource_group.test_grp.name #var.resource_group_name
  location            = var.location
  size                = var.vm_size
  admin_username      = "aomojola"
  admin_password      = "Phil0$0phyakin2023"
  network_interface_ids = [
    azurerm_network_interface.nic2_name.id,
  ]

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "MicrosoftWindowsServer"
    offer     = "WindowsServer"
    sku       = "2019-Datacenter"
    version   = "latest"
  }

  depends_on = [
    azurerm_network_interface.nic2_name
  ]
}

## CREATE MANAGED DISKS FOR ADDITIONAL DATA DISKS 
# resource "azurerm_managed_disk" "test_md" {
#   name                 = "sql-server-managed-disk1"
#   location             = var.location
#   resource_group_name  = azurerm_resource_group.test_grp.name #var.resource_group_name
#   storage_account_type = "Standard_LRS"
#   create_option        = "Empty"
#   disk_size_gb         = 10
#    count = 3
# }

# ## CREATE DATA DISK ATTACHMENT FOR SQL SERVER VM
# resource "azurerm_virtual_machine_data_disk_attachment" "test_dda" {
#   managed_disk_id    = azurerm_managed_disk.test_md.id
#   count_managed_disk    = azurerm_managed_disk.test_md.${count.index}
#   virtual_machine_id = azurerm_windows_virtual_machine.vm1.id
#   lun                = "0"
#   caching            = "ReadWrite"
# }

## CREATE NETWORK SECURITY GROUP
resource "azurerm_network_security_group" "nsg" {
  name                = "test-nsg"
  location            = var.location
  resource_group_name = azurerm_resource_group.test_grp.name #var.resource_group_name

  security_rule {
    name                       = "RW_TCP_Ports"
    priority                   = 100
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "443-8085"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
  }

  security_rule {
    name                       = "ICMP"
    priority                   = 110
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Icmp"
    source_port_range          = "*"
    destination_port_range     = "*"
    source_address_prefix      = "192.168.85.0/24"
    destination_address_prefix = "*"
  }

  security_rule {
    name                       = "FTP"
    priority                   = 120
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "50000-51000"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
  }

  security_rule {
    name                       = "RW_UDP_Ports"
    priority                   = 130
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Udp"
    source_port_range          = "*"
    destination_port_range     = "22335"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
  }

  tags = {
    environment = "Development"
  }
}

## CREATE NSG ASSOCIATION
resource "azurerm_subnet_network_security_group_association" "nsg_assoc" {
  subnet_id                 = azurerm_subnet.subnet1_name.id
  network_security_group_id = azurerm_network_security_group.nsg.id
  depends_on = [
    azurerm_network_security_group.nsg
  ]
}